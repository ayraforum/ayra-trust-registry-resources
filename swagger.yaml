openapi: 3.0.1
info:
  title: Ayra TRQP Profile API
  version: 1.0.0
  description: |
    This specification defines a RESTful TRQP profile for use in the Ayraâ„¢ Trust Network.
    It includes endpoints for retrieving Trust Registry metadata,
    authorization data, verifying entity authorization status,
    and checking ecosystem recognition.

servers:
  # TODO: consider sandbox-tr.ayra.technology for domain.
  - url: https://example-trust-registry.com
    description: Production server (example)
  - url: https://sandbox-trust-registry.com
    description: Sandbox server (example)

tags:
  - name: trqp-core
    description: TRQP Compliant Queries
  - name: ayra-extension
    description: Ayra Extensions to TRQP
  - name: lookup
    description: Lookup capability ()

paths:
  /recognition:
    post: 
      summary: Queries registry for recognition, by and ecosystem, of another ecosystem.
      tags:
        - trqp-core
      requestBody:  
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/TrqpRecognitionQuery'
      responses:
        200:
          description: Recognition query successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrqpRecognitionResponse'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        401:
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /authorization:
    post: 
      summary: Queries registry for recognition, by and ecosystem, of another ecosystem.
      tags:
        - trqp-core
      requestBody:  
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/TrqpAuthorizationQuery'
      responses:
        200:
          description: Authorization query successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrqpAuthorizationResponse'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        401:
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        
  /metadata:
    get:
      summary: Retrieve Trust Registry Metadata
      tags:
        - ayra-extension
      description: |
        Returns Trust Registry Metadata as a JSON object.
      operationId: getTrustRegistryMetadata
      parameters:
        - name: egf_did
          in: query
          required: false
          description: An optional identifier specifying which ecosystem's metadata should be retrieved.
          schema:
            type: string
      responses:
        "200":
          description: Successfully retrieved Trust Registry Metadata.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrustRegistryMetadata"
        "404":
          description: Metadata not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "401":
          description: Unauthorized request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

  /entities/{entity_id}:
    get:
      summary: Retrieve Entity Information
      tags:
        - ayra-extension
      description: |
        Retrieves information about a specific entity.
      operationId: getEntityInformation
      parameters:
        - in: path
          name: entity_id
          required: true
          description: A unique identifier for the entity.
          schema:
            type: string
      responses:
        "200":
          description: Entity information successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                description: A JSON object containing entity information.
        "404":
          description: Entity not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "401":
          description: Unauthorized request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

  /entities/{entity_did}/authorizations:
    get:
      summary: List Authorizations that this Entity has
      tags:
        - ayra-extension
      description: |
        Retrieves a collection of authorizations that this entity has, according to the ecosystem queried.
      operationId: listEcosystemRecognitions
      parameters:
        - name: ecosystem_did
          in: path
          required: true
          description: Unique identifier of the ecosystem being queried.
          schema:
            type: string
        
        - name: time
          in: query
          required: false
          description: RFC3339 timestamp indicating when recognition is checked.
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Entity authorizations retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuthorizationResponse"
        "401":
          description: Unauthorized request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "404":
          description: Ecosystem not recognized or not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  


  /ecosystems/{ecosystem_did}/recognitions:
    get:
      summary: List Recognized Ecosystems
      tags:
        - ayra-extension
      description: |
        Retrieves a collection of recognized ecosystems for a specified governance framework.
      operationId: listEcosystemRecognitions
      parameters:
        - name: ecosystem_did
          in: path
          required: true
          description: Unique identifier of the ecosystem being queried.
          schema:
            type: string
        - name: egf_did
          in: query
          required: false
          description: Optional identifier of the governance framework to filter the response. All EGFs supported by the ecosystem will be used when not provided.
          schema:
            type: string
        - name: time
          in: query
          required: false
          description: RFC3339 timestamp indicating when recognition is checked.
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Ecosystem recognitions retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RecognitionResponse"
        "401":
          description: Unauthorized request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "404":
          description: Ecosystem not recognized or not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /ecosystems/{ecosystem_did}/lookups/assuranceLevels:
    get:
      summary: Lookup Supported Assurance Levels
      tags:
        - ayra-extension
      description: |
        Retrieves the supported assurance levels for the specified ecosystem.
      operationId: lookupSupportedAssuranceLevels
      parameters:
        - name: ecosystem_did
          in: path
          required: true
          description: Unique identifier of the ecosystem being queried.
          schema:
            type: string
      responses:
        "200":
          description: Supported assurance levels retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AssuranceLevelResponse"
        "401":
          description: Unauthorized request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "404":
          description: Ecosystem not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

  /ecosystems/{ecosystem_did}/lookups/authorizations:
    get:
      summary: Lookup Authorizations
      tags:
        - ayra-extension
      description: |
        Performs an authorization lookup based on the provided ecosystem identifier. These strings can be used in TRQP queries for this ecosystem (as `assertion_id` values in the TRQP queries).
      operationId: lookupAuthorizations
      parameters:
        - name: ecosystem_did
          in: path
          required: true
          description: Ecosystem identifier.
          schema:
            type: string
      responses:
        "200":
          description: A list of authorization responses.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuthorizationResponse"
        "404":
          description: Entity not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "401":
          description: Unauthorized request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

  /ecosystems/{ecosystem_did}/lookups/didmethods:
    get:
      summary: Lookup Supported DID Methods
      tags:
        - ayra-extension
      description: |
        Retrieves the supported DID Methods. AYRA is opinionated here.
      operationId: lookupSupportedDIDMethods
      parameters:
        - name: ecosystem_did
          in: path
          required: true
          description: Unique identifier of the ecosystem being queried.
          schema:
            type: string
      responses:
        "200":
          description: Supported DID Methods retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DIDMethodListType"
        "401":
          description: Unauthorized request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "404":
          description: Ecosystem not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

components:
  schemas:
    


    ProblemDetails:
      type: object
      description: |
        A Problem Details object as defined in [RFC 7807](https://datatracker.ietf.org/doc/html/rfc7807).
      properties:
        type:
          type: string
          format: uri
          description: A URI reference that identifies the problem type.
        title:
          type: string
          description: A short, human-readable summary of the problem.
        status:
          type: integer
          description: The HTTP status code (e.g., 404 for "Not Found").
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          format: uri
          description: A URI reference that identifies the specific occurrence of the problem.
      additionalProperties: true

    TrustRegistryMetadata:
      type: object
      properties:
        trustregistry_did:
          type: string
          description: Unique identifier, as DID, of the Trust Registry. 
        egf_did:
          type: string
          description: The Primary EGF, identified by DID, for the ecosystem.
          #TODO: review thinking on defaultEGF_DID
        authority_did:
          type: string
          description: Unique identifier of the Authority that operates the Trust Registry.
        ecosystem_did:
          type: string
          description: Unique identifier of the Ecosystem that the Trust Registry is associated with. This is used in TRQP queries as the `ecosytem_id` value.
        description:
          type: string
          maxLength: 4096
          description: A description of the Trust Registry.
        name:
          type: string
          description: Human-readable name of the Trust Registry.
        controllers:
          type: array
          description: List of unique identifiers representing the controllers of the Trust Registry.
          items:
            type: string
          minItems: 1
        additionalProperties:
            type: string
      required:
        - id
        - description
        - trustregistry_did
        - ecosystem_did
        - controllers

    AuthorizationResponse:
      type: object
      properties:
        entity_did:
          type: string
          description: The identifier of the subject of the authorization query.
        ecosystem_did:
          type: string
          description: The id of the Ecosystem that was queried.
        egf_did:
          type: string
          description: EGF DID this authorization response relates to.
        authorized:
          type: boolean
          description: Specifies whether the entity is authorized under the provided authorization ID.
        message:
          type: string
          description: Additional context or information regarding the authorization status.
        evaluated_at:
          type: string
          format: date-time
          description: Timestamp when the authorization status was evaluated.
        response_time:
          type: string
          format: date-time
          description: Timestamp when the response was generated.
        expiry_time:
          type: string
          format: date-time
          description: Timestamp when the authorization status expires (if applicable).
        jws:
          type: string
          description: Signed response object as specified in [RFC 7515](https://datatracker.ietf.org/doc/html/rfc7515) from the controller of the Trust Registry.
      required:
        - recognized
        - authorized
        - message
        - evaluated_at
        - response_time

    RecognitionResponse:
      type: object
      properties:
        ecosystem_did:
          type: string
          description: The identifier of the subject of the recognition query.
        recognized:
          type: boolean
          description: Indicates whether the ecosystem ID is recognized by the Trust Registry.
        message:
          type: string
          description: Additional information regarding the recognition status.
        egf_did:
          type: string
          description: EGF DID this recognition applies to.
        evaluated_at:
          type: string
          format: date-time
          description: Timestamp when the recognition status was evaluated.
        response_time:
          type: string
          format: date-time
          description: Timestamp when the response was generated.
        expiry_time:
          type: string
          format: date-time
          description: Timestamp when the recognition status expires (if applicable).
        jws:
          type: string
          description: Signed response object as specified in [RFC 7515](https://datatracker.ietf.org/doc/html/rfc7515) from the controller of the Trust Registry.
      required:
        - recognized
        - message
        - evaluated_at
        - response_time

    AssuranceLevelResponse:
      type: object
      properties:
        egf_did:
          type: string
          description: EGF DID this assurance level applies to.
        assurance_level:
          type: string
          description: The assurance level.
        description:
          type: string
          description: Details about the assurance level.

      required:
        - assurance_level
        - description

    DIDMethodType:
      type: object
      required:
        - identifier
      description: |
        DID Method supported by the trust registry. May include the maximum
      properties:
        identifier:
          type: string
          description: >
            as "maintained" at
            https://w3c.github.io/did-spec-registries/#did-methods TODO: do
            better...
        egf_did:
          type: string
          description: EGF DID this DID Method applies to.
        maximumAssuranceLevel:
          description: >
            A DID Method may, due to technical or human trust considerations be
            limited in the assurance

            level that it can provide.
          allOf:
            - $ref: "#/components/schemas/AssuranceLevelType"
    DIDMethodListType:
      type: array
      items:
        $ref: "#/components/schemas/DIDMethodType"
    AssuranceLevelType:
      type: object
      description: >
        Creates assurance level as a top-level/first-class-citizen of a Trust
        Registry. AssuranceLevel values

        MUST be defined in an EGF if they are used.
      required:
        - identifier
        - name
        - description
      properties:
        identifier:
          type: string
          format: URI
          example:
            - did:example:123
        name:
          type: string
          example:
            - LOA2
        description:
          type: string
          example:
            - "Level of Assurance 2 - see EGF for definition, terms, obligations,liabilities, and indemnity"


    TrqpRecognitionQuery:
      type: object
      description: |
        A query request to a Trust Registry that supports TRQP 2.0. 
        Conforms with the schemas defined in TRQP 2.0. and matches the schema objects:
        - trqp_recognition_request.jsonschema
        Used by the following TRQP POST queries:
        - POST /recognition
      properties:
        entity_id:
          type: string
          description: |
            Unique identifier of the TRUST REGISTRY (identified by DID) that is the subject of the query. 
            This is the "other trust registry" in the "Does your ecosystem recognized this **other trust registry** as assertion_id?". 
        authority_id:
          type: string
          description: |
            Unique identifier of the ECOSYSTEM (identified by DID) that is being queried. 
            This is the "your ecosystem" in the "Does **your ecosystem** recognize this other trust registry as assertion_id?".
        assertion_id:
          type: string
          description: |
            The assertion_id that is being tested against. 
            This is the `assertion_id` in the "Does your ecosystem recognize this other trust registry as **assertion_id**?".
        context:
          type: object
          properties:
            time:
              type: string
              format: date-time
              description: |
                RFC3339 timestamp indicating when recognition is checked. 
                Defaults to "now" on system being queried if omitted.
          additionalProperties:
            type: string
          description: |
            A flexible context object that can hold arbitrary key-value pairs. 
            - NOTE: `time` is codified as it is a standard context to be considered.
      required:
        - entity_id
        - authority_id
        - assertion_id 

    TrqpAuthorizationQuery:
      type: object
      description: |
        A query request to a Trust Registry that supports TRQP 2.0. 
        Conforms with the schemas defined in TRQP 2.0. and matches the schema objects:
        - trqp_authorization_request.jsonschema
        Used by the following TRQP POST queries:
        - POST /authorization 
      properties:
        entity_id:
          type: string
          description: |
            Unique identifier of the TRUST REGISTRY (identified by DID) that is the subject of the query. 
            This is the 'EntityX` in the "Does **EntityX** have AuthorityY in EcosystemZ?". 
        authority_id:
          type: string
          description: |
            Unique identifier of the ECOSYSTEM (identified by DID) that is being queried. 
            This is the "EcosystemZ" in the "Does EntityX have AuthorityY in **EcosystemZ**?". 
        assertion_id:
          type: string
          description: |
            The assertion_id that is being tested against. 
            This is the `AuthorityY` in the "Does EntityX have **AuthorityY** in **EcosystemZ**?". 
        context:
          type: object
          properties:
            time:
              type: string
              format: date-time
              description: |
                RFC3339 timestamp indicating when recognition is checked. 
                Defaults to "now" on system being queried if omitted.
          additionalProperties:
            type: string
          description: |
            A flexible context object that can hold arbitrary key-value pairs. 
            - NOTE: `time` is codified as it is a standard context to be considered.
      required:
        - entity_id
        - authority_id
        - assertion_id 

    TrqpRecognitionResponse:
      type: object
      description: |
        A recognition response conforming to TRQP 2.0 specification and the
        trqp_recognition_response.jsonschema requirements.
      properties:
        entity_id:
          type: string
          description: The identifier of the subject of the recognition query.
        authority_id:
          type: string
          description: The id of the Authority entity.
        assertion_id:
          type: string
          description: The identifier of the claim type being made against the entity_id.
        recognized:
          type: boolean
          description: True if the assertion has been verified, false otherwise.
        time_requested:
          type: string
          format: date-time
          description: The server time that was used in the query.
        time_evaluated:
          type: string
          format: date-time
          description: The server time that was used in the query.
        message:
          type: string
          description: Additional details attached to the response about the assertion.
        context:
          type: object
          description: The context object that was supplied for the query that was evaluated.
          properties:
            time:
              type: string
              format: date-time
              description: Time for query to use. If blank, uses current server time. RFC3339 required, using only Z (+00:00) offset.
          additionalProperties:
            type: string
      required:
        - entity_id
        - assertion_id
        - authority_id
        - time_evaluated
        - recognized

    TrqpAuthorizationResponse:
      type: object
      description: |
        An authorization response conforming to TRQP 2.0 specification and the
        trqp_authorization_response.jsonschema requirements.
      properties:
        entity_id:
          type: string
          description: The identifier of the subject of the authorization.
        authority_id:
          type: string
          description: The id of the Authority entity.
        assertion_id:
          type: string
          description: The identifier of the claim type being made against the entity_id.
        assertion_verified:
          type: boolean
          description: True if the assertion has been verified, false otherwise.
        time_requested:
          type: string
          format: date-time
          description: The server time that was requested (may be blank).
        time_evaluated:
          type: string
          format: date-time
          description: The server time that was used in the query.
        message:
          type: string
          description: Additional details attached to the response about the assertion.
        context:
          type: object
          description: The context object that was supplied for the query that was evaluated.
          properties:
            time:
              type: string
              format: date-time
              description: Time for query to use. If blank, uses current server time. RFC3339 required, using only Z (+00:00) offset.
          additionalProperties:
            type: string
      required:
        - entity_id
        - assertion_id
        - authority_id
        - time_evaluated
        - assertion_verified
